import math

""" A color table follows where the key is an rgb hex value as used in css
but without the leading #."""
COLOR_TABLE_LAUNCHPAD = {
        '616161': 0,
        'b3b3b3': 1,
        'dddddd': 2,
        'ffffff': 3,
        'ffb3b3': 4,
        'ff6161': 5,
        'dd6161': 6,
        'b36161': 7,
        'fff3d5': 8,
        'ffb361': 9,
        'dd8c61': 10,
        'b37661': 11,
        'ffeea1': 12,
        'ffff61': 13,
        'dddd61': 14,
        'b3b361': 15,
        'ddffa1': 16,
        'c2ff61': 17,
        'a1dd61': 18,
        '81b361': 19,
        'c2ffb3': 20,
        '61ff61': 21,
        '61dd61': 22,
        '61b361': 23,
        'c2ffc2': 24,
        '61ff8c': 25,
        '61dd76': 26,
        '61b36b': 27,
        'c2ffcc': 28,
        '61ffcc': 29,
        '61dda1': 30,
        '61b381': 31,
        'c2fff3': 32,
        '61ffe9': 33,
        '61ddc2': 34,
        '61b396': 35,
        'c2f3ff': 36,
        '61eeff': 37,
        '61c7dd': 38,
        '61a1b3': 39,
        'c2ddff': 40,
        '61c7ff': 41,
        '61a1dd': 42,
        '6181b3': 43,
        'a18cff': 44,
        '6161ff': 45,
        '6161dd': 46,
        '6161b3': 47,
        'ccb3ff': 48,
        'a161ff': 49,
        '8161dd': 50,
        '7661b3': 51,
        'ffb3ff': 52,
        'ff61ff': 53,
        'dd61dd': 54,
        'b361b3': 55,
        'ffb3d5': 56,
        'ff61c2': 57,
        'dd61a1': 58,
        'b3618c': 59,
        'ff7661': 60,
        'e9b361': 61,
        'ddc261': 62,
        'a1a161': 63,
        '61b361': 64,
        '61b38c': 65,
        '618cd5': 66,
        '6161ff': 67,
        '61b3b3': 68,
        '8c61f3': 69,
        'ccb3c2': 70,
        '8c7681': 71,
        'ff6161': 72,
        'f3ffa1': 73,
        'eefc61': 74,
        'ccff61': 75,
        '76dd61': 76,
        '61ffcc': 77,
        '61e9ff': 78,
        '61a1ff': 79,
        '8c61ff': 80,
        'cc61fc': 81,
        'ee8cdd': 82,
        'a17661': 83,
        'ffa161': 84,
        'ddf961': 85,
        'd5ff8c': 86,
        '61ff61': 87,
        'b3ffa1': 88,
        'ccfcd5': 89,
        'b3fff6': 90,
        'cce4ff': 91,
        'a1c2f6': 92,
        'd5c2f9': 93,
        'f98cff': 94,
        'ff61cc': 95,
        'ffc261': 96,
        'f3ee61': 97,
        'e4ff61': 98,
        'ddcc61': 99,
        'b3a161': 100,
        '61ba76': 101,
        '76c28c': 102,
        '8181a1': 103,
        '818ccc': 104,
        'ccaa81': 105,
        'dd6161': 106,
        'f9b3a1': 107,
        'f9ba76': 108,
        'fff38c': 109,
        'e9f9a1': 110,
        'd5ee76': 111,
        '8181a1': 112,
        'f9f9d5': 113,
        'ddfce4': 114,
        'e9e9ff': 115,
        'e4d5ff': 116,
        'b3b3b3': 117,
        'd5d5d5': 118,
        'f9ffff': 119,
        'e96161': 120,
        'aa6161': 121,
        '81f661': 122,
        '61b361': 123,
        'f3ee61': 124,
        'b3a161': 125,
        'eec261': 126,
        'c27661': 127,
    }

COLOR_TABLE_TERMINAL = {
        '000000': 0,
        '800000': 1,
        '008000': 2,
        '808000': 3,
        '000080': 4,
        '800080': 5,
        '008080': 6,
        'c0c0c0': 7,
        '808080': 8,
        'ff0000': 9,
        'ffff00': 10,
        '00ff00': 11,
        '0000ff': 12,
        'ff00ff': 13,
        '00ffff': 14,
        'ffffff': 15,
        '000000': 16,
        '00005f': 17,
        '000087': 18,
        '0000af': 19,
        '0000d7': 20,
        '0000ff': 21,
        '005f00': 22,
        '005f5f': 23,
        '005f87': 24,
        '005faf': 25,
        '005fd7': 26,
        '005fff': 27,
        '008700': 28,
        '00875f': 29,
        '008787': 30,
        '0087af': 31,
        '0087d7': 32,
        '0087ff': 33,
        '00af00': 34,
        '00af5f': 35,
        '00af87': 36,
        '00afaf': 37,
        '00afd7': 38,
        '00afff': 39,
        '00d700': 40,
        '00d75f': 41,
        '00d787': 42,
        '00d7af': 43,
        '00d7d7': 44,
        '00d7ff': 45,
        '00ff00': 46,
        '00ff5f': 47,
        '00ff87': 48,
        '00ffaf': 49,
        '00ffd7': 50,
        '00ffff': 51,
        '5f0000': 52,
        '5f005f': 53,
        '5f0087': 54,
        '5f00af': 55,
        '5f00d7': 56,
        '5f00ff': 57,
        '5f5f00': 58,
        '5f5f5f': 59,
        '5f5f87': 60,
        '5f5faf': 61,
        '5f5fd7': 62,
        '5f5fff': 63,
        '5f8700': 64,
        '5f875f': 65,
        '5f8787': 66,
        '5f87af': 67,
        '5f87d7': 68,
        '5f87ff': 69,
        '5faf00': 70,
        '5faf5f': 71,
        '5faf87': 72,
        '5fafaf': 73,
        '5fafd7': 74,
        '5fafff': 75,
        '5fd700': 76,
        '5fd75f': 77,
        '5fd787': 78,
        '5fd7af': 79,
        '5fd7d7': 80,
        '5fd7ff': 81,
        '5fff00': 82,
        '5fff5f': 83,
        '5fff87': 84,
        '5fffaf': 85,
        '5fffd7': 86,
        '5fffff': 87,
        '870000': 88,
        '87005f': 89,
        '870087': 90,
        '8700af': 91,
        '8700d7': 92,
        '8700ff': 93,
        '875f00': 94,
        '875f5f': 95,
        '875f87': 96,
        '875faf': 97,
        '875fd7': 98,
        '875fff': 99,
        '878700': 100,
        '87875f': 101,
        '878787': 102,
        '8787af': 103,
        '8787d7': 104,
        '8787ff': 105,
        '87af00': 106,
        '87af5f': 107,
        '87af87': 108,
        '87afaf': 109,
        '87afd7': 110,
        '87afff': 111,
        '87d700': 112,
        '87d75f': 113,
        '87d787': 114,
        '87d7af': 115,
        '87d7d7': 116,
        '87d7ff': 117,
        '87ff00': 118,
        '87ff5f': 119,
        '87ff87': 120,
        '87ffaf': 121,
        '87ffd7': 122,
        '87ffff': 123,
        'af0000': 124,
        'af005f': 125,
        'af0087': 126,
        'af00af': 127,
        'af00d7': 128,
        'af00ff': 129,
        'af5f00': 130,
        'af5f5f': 131,
        'af5f87': 132,
        'af5faf': 133,
        'af5fd7': 134,
        'af5fff': 135,
        'af8700': 136,
        'af875f': 137,
        'af8787': 138,
        'af87af': 139,
        'af87d7': 140,
        'af87ff': 141,
        'afaf00': 142,
        'afaf5f': 143,
        'afaf87': 144,
        'afafaf': 145,
        'afafd7': 146,
        'afafff': 147,
        'afd700': 148,
        'afd75f': 149,
        'afd787': 150,
        'afd7af': 151,
        'afd7d7': 152,
        'afd7ff': 153,
        'afff00': 154,
        'afff5f': 155,
        'afff87': 156,
        'afffaf': 157,
        'afffd7': 158,
        'afffff': 159,
        'd70000': 160,
        'd7005f': 161,
        'd70087': 162,
        'd700af': 163,
        'd700d7': 164,
        'd700ff': 165,
        'd75f00': 166,
        'd75f5f': 167,
        'd75f87': 168,
        'd75faf': 169,
        'd75fd7': 170,
        'd75fff': 171,
        'd78700': 172,
        'd7875f': 173,
        'd78787': 174,
        'd787af': 175,
        'd787d7': 176,
        'd787ff': 177,
        'd7af00': 178,
        'd7af5f': 179,
        'd7af87': 180,
        'd7afaf': 181,
        'd7afd7': 182,
        'd7afff': 183,
        'd7d700': 184,
        'd7d75f': 185,
        'd7d787': 186,
        'd7d7af': 187,
        'd7d7d7': 188,
        'd7d7ff': 189,
        'd7ff00': 190,
        'd7ff5f': 191,
        'd7ff87': 192,
        'd7ffaf': 193,
        'd7ffd7': 194,
        'd7ffff': 195,
        'ff0000': 196,
        'ff005f': 197,
        'ff0087': 198,
        'ff00af': 199,
        'ff00d7': 200,
        'ff00ff': 201,
        'ff5f00': 202,
        'ff5f5f': 203,
        'ff5f87': 204,
        'ff5faf': 205,
        'ff5fd7': 206,
        'ff5fff': 207,
        'ff8700': 208,
        'ff875f': 209,
        'ff8787': 210,
        'ff87af': 211,
        'ff87d7': 212,
        'ff87ff': 213,
        'ffaf00': 214,
        'ffaf5f': 215,
        'ffaf87': 216,
        'ffafaf': 217,
        'ffafd7': 218,
        'ffafff': 219,
        'ffd700': 220,
        'ffd75f': 221,
        'ffd787': 222,
        'ffd7af': 223,
        'ffd7d7': 224,
        'ffd7ff': 225,
        'ffff00': 226,
        'ffff5f': 227,
        'ffff87': 228,
        'ffffaf': 229,
        'ffffd7': 230,
        'ffffff': 231,
        '080808': 232,
        '121212': 233,
        '1c1c1c': 234,
        '262626': 235,
        '303030': 236,
        '3a3a3a': 237,
        '444444': 238,
        '4e4e4e': 239,
        '585858': 240,
        '626262': 241,
        '6c6c6c': 242,
        '767676': 243,
        '808080': 244,
        '8a8a8a': 245,
        '949494': 246,
        '9e9e9e': 247,
        'a8a8a8': 248,
        'b2b2b2': 249,
        'bcbcbc': 250,
        'c6c6c6': 251,
        'd0d0d0': 252,
        'dadada': 253,
        'e4e4e4': 254,
        'eeeeee': 255,
}

def cv_to_ints(color_value):
    """ param: c27661
        returns: 194, 118, 97
    """
    return int(color_value[0:2], 16), int(color_value[2:4], 16), int(color_value[4:6], 16)


def color_distance(r1, g1, b1, r2, g2, b2):
  """Calculates the colour distance between two RGB colors.
  Returns:
    The colour distance between the two colors.
  """
  rmean = (r1 + r2) // 2
  r = r1 - r2
  g = g1 - g2
  b = b1 - b2
  return math.sqrt((((512 + rmean) * r * r) >> 8) + 4 * g * g + (((767 - rmean) * b * b) >> 8))


def closest_color(r, g, b, color_table):
    """ Returns the color number of the closest color on the launchpad
        Performance is about 12.000 calls per second on my cpu. 64 pads x 60fps = 3840, so this
        should be good enough.
    """
    min_distance_color_number = 0
    min_distance = 1e100  # Sorry, I don't know or have time to find the maximum.
    for color, color_number in color_table.items():
        distance = color_distance(r, g, b, *cv_to_ints(color))
        if distance < min_distance:
            min_distance = distance
            min_distance_color_number = color_number
    return min_distance_color_number


